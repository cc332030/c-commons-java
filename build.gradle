buildscript {
  apply from: 'config.gradle'
}

plugins {
  id "io.codearte.nexus-staging" version "0.30.0"
}

def ext = rootProject.ext
def versions = ext.versions

allprojects {

  apply plugin: 'java-library'
  apply plugin: 'idea'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  [compileJava, compileTestJava, javadoc]*.options*.encoding = ext.charset

  jar {
    enabled = true

    into("META-INF/resources") {
      from("src/main/webapp")
    }
  }

  java {
    withJavadocJar()
    withSourcesJar()
  }

  idea {
    module {
      downloadJavadoc = false
      downloadSources = false
    }
  }

  repositories {
    maven {
      url 'https://oss.sonatype.org/content/groups/public/'
    }
    mavenCentral()
  }

  dependencies {

    // commons-lang3
    compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: versions.apache_commons_lang3
    testCompileOnly group: 'org.apache.commons', name: 'commons-lang3', version: versions.apache_commons_lang3

    // commons-collections4
    compileOnly group: 'org.apache.commons', name: 'commons-collections4', version: versions.apache_commons_collections
    testCompileOnly group: 'org.apache.commons', name: 'commons-collections4', version: versions.apache_commons_collections

    // commons-io
    compileOnly group: 'commons-io', name: 'commons-io', version: versions.apache_commons_io
    testCompileOnly group: 'commons-io', name: 'commons-io', version: versions.apache_commons_io

    // commons-net
    compileOnly group: 'commons-net', name: 'commons-net', version: versions.apache_commons_net
    testCompileOnly group: 'commons-net', name: 'commons-net', version: versions.apache_commons_net

    // gson
    compileOnly group: 'com.google.code.gson', name: 'gson', version: versions.google_gson
    testCompileOnly group: 'com.google.code.gson', name: 'gson', version: versions.google_gson

    // guava
    compileOnly group: 'com.google.guava', name: 'guava', version: versions.google_guava
    testCompileOnly group: 'com.google.guava', name: 'guava', version: versions.google_guava

    // logback
    compileOnly group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
    testCompileOnly group: 'ch.qos.logback', name: 'logback-core', version: versions.logback

    compileOnly group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    testCompileOnly group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback

    testImplementation group: 'junit', name: 'junit', version: versions.junit

    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  }

  // 实时更新 snapshots
  configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
    resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
  }

  sourceSets {
    main {
      resources {
        srcDir 'src/main/java'
      }
    }
  }

  test {
    exclude '**/*Test*.class'
  }

  publishing {
    publications {

      mavenJava(MavenPublication) {

        from components.java

        pom {

          name = 'c-commons-java'
          description = 'Java commons library'
          url = "https://github.com/cc332030/${rootProject.name}"
          licenses {
            license {
              name = 'The Apache License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          developers {
            developer {
              id = 'c332030'
              name = 'c332030'
              email = 'c332030@gmail.com'
            }
          }
          scm {
            connection = "scm:git:git://git@github.com:cc332030/${rootProject.name}.git"
            developerConnection = "scm:git:ssh://git@github.com:cc332030/${rootProject.name}.git"
            url = "https://github.com/cc332030/${rootProject.name}"
          }

        }
      }

    }

    repositories {
      maven {
        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

        credentials {
          username ossrhUsername
          password ossrhPassword
        }
      }
    }

  }

  signing {
    sign publishing.publications
  }

  nexusStaging {
    packageGroup = project.group + '.' + rootProject.name
    // packageGroup = 'com.c332030.c-commons-java'
    stagingProfileId = "yourStagingProfileId"
  }

}
